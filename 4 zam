import os
import sqlite3
import sys
from PyQt5.QtWidgets import (QApplication, QWidget, QVBoxLayout,
                             QLabel, QTextEdit, QPushButton,
                             QFileDialog, QMessageBox, QInputDialog)

con = sqlite3.connect("test.db")
cursor = con.cursor()
cursor.execute("""
    CREATE TABLE IF NOT EXISTS filestest (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        text TEXT,
        priority INTEGER
    )
""")
try:
    cursor.execute("INSERT INTO filestest (id, text, priority) VALUES (1, 'namefile', 1)")
    con.commit()
except sqlite3.IntegrityError:
    print("Запись с id=1 уже существует.")

def init_ui():
    window = QWidget()
    window.setWindowTitle("Приложение для Заметок")
    window.setGeometry(100, 100, 600, 500)

    layout = QVBoxLayout()

    label = QLabel("Введите текст заметки:")
    layout.addWidget(label)

    text_edit = QTextEdit()
    layout.addWidget(text_edit)

    create_button = QPushButton("Создать заметку")
    create_button.setStyleSheet("background-color: lightgreen; color: black;")
    create_button.clicked.connect(lambda: create_note(text_edit))
    layout.addWidget(create_button)

    open_button = QPushButton("Открыть заметку")
    open_button.setStyleSheet("background-color: lightblue; color: black;")
    open_button.clicked.connect(lambda: open_note(text_edit))
    layout.addWidget(open_button)

    save_button = QPushButton("Сохранить заметку")
    save_button.setStyleSheet("background-color: lightyellow; color: black;")
    save_button.clicked.connect(lambda: save_note(text_edit))
    layout.addWidget(save_button)

    add_button = QPushButton("Добавить текст")
    add_button.setStyleSheet("background-color: lightgrey; color: black;")
    add_button.clicked.connect(lambda: add_text(text_edit))
    layout.addWidget(add_button)

    window.setLayout(layout)
    return window

def create_note(text_edit):
    filename, _ = QFileDialog.getSaveFileName(None, "Создать заметку", "", "Text Files (*.txt);;All Files (*)")
    if filename:
        save_note_to_file(text_edit, filename)

def open_note(text_edit):
    filename, _ = QFileDialog.getOpenFileName(None, "Открыть заметку", "", "Text Files (*.txt);;All Files (*)")
    if filename:
        try:
            with open(filename, 'r', encoding='utf-8') as file:
                content = file.read()
            text_edit.setText(content)
        except Exception as e:
            QMessageBox.critical(None, "Ошибка", f"Не удалось открыть файл: {e}")

def save_note(text_edit):
    filename, ok = QInputDialog.getText(None, "Сохранить заметку", "Введите имя файла:")
    if ok and filename:
        save_note_to_file(text_edit, filename + ".txt")

def save_note_to_file(text_edit, filename):
    try:
        with open(filename, 'w', encoding='utf-8') as file:
            file.write(text_edit.toPlainText())
        QMessageBox.information(None, "Успех", "Заметка сохранена!")
    except Exception as e:
        QMessageBox.critical(None, "Ошибка", f"Не удалось сохранить файл: {e}")

def add_text(text_edit):
    text, ok = QInputDialog.getText(None, "Добавить текст", "Введите текст для добавления:")
    if ok and text:
        text_edit.append(text)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    todo_app = init_ui()
    todo_app.show()
    sys.exit(app.exec_())
